---
import { getCollection } from "astro:content";
import Layout from "@layouts/Layout.astro";
import { actions } from "astro:actions";
import { Image } from "astro:assets";
import UpdateRating from "@components/UpdateRating.astro";

const getRating = await Astro.callAction(actions.ratings.getRatingById, {
  ratingId: Astro.params.ratingId as string,
});

const { data: ratingData, error: ratingError } = getRating;

let movie, omdb;

if (!ratingError && ratingData) {
  const getMovie = await Astro.callAction(actions.movies.getMovieById, {
    movieId: String(ratingData.movieId ?? ""),
  });

  const { data: movieData, error: movieError } = getMovie;

  if (!movieError) {
    movie = movieData;
    if (movie) {
      omdb = await Astro.callAction(actions.omdb.getOmdbFilm, {
        title: String(movie.title),
        apiKey: import.meta.env.PUBLIC_OMDB_API_KEY as string,
      });
    }
  } else {
    console.error("Error fetching movie:", movieError);
  }
} else {
  console.error("Error fetching rating:", ratingError);
}

const auth = Astro.locals.auth();

const viewers = await getCollection("Viewers");

const viewer = viewers.find((v) => v.id === Astro.params.id);
const rating = viewer?.data.ratings.find(
  (r) => r.id === Number(Astro.params.ratingId)
);

// if (!viewer || !rating) return Astro.redirect("/404");

const isViewer = auth && auth.userId === viewer.data.clerkId;
---

<Layout title={`Rating for ${viewer.data.name}`}>
  {
    movie && (
      <div class="container mx-auto p-4 text-white">
        <h1 class="text-4xl font-bold mb-4">{movie.title}</h1>

        {omdb && (
          <div class="flex flex-col md:flex-row bg-gray-800 p-4 rounded-lg shadow-lg">
            <Image
              src={omdb.data.Poster}
              alt={omdb.data.Title}
              height={288}
              width={192}
              class="w-48 h-72 object-cover rounded-lg mb-4 md:mb-0 md:mr-4"
              transition:name={omdb.data.Poster}
            />
            <div class="flex-1">
              <p class="text-lg mb-2">
                <span class="font-bold">Year: </span> {omdb.data.Year}
              </p>
              <p class="text-lg mb-2">
                <span class="font-bold">Rated: </span> {omdb.data.Rated}
              </p>
              <p class="text-lg mb-2">
                <span class="font-bold">Runtime: </span> {omdb.data.Runtime}
              </p>
              <p class="text-lg mb-2">
                <span class="font-bold">Genre: </span> {omdb.data.Genre}
              </p>
              <p class="text-lg mb-2">
                <span class="font-bold">Director: </span> {omdb.data.Director}
              </p>
              <p class="text-lg mb-2">
                <span class="font-bold">Actors: </span> {omdb.data.Actors}
              </p>
              <p class="text-lg mb-2">
                <span class="font-bold">Plot: </span> {omdb.data.Plot}
              </p>
            </div>
          </div>
        )}
      </div>
    )
  }
  <div
    class="container mx-auto p-6 text-white bg-gray-900 rounded-lg shadow-lg gap-4"
  >
    <h1 class="text-4xl font-bold mb-4">{viewer.data.name}</h1>
    <h2>
      {rating.movieTitle}
    </h2>
    {isViewer ? <UpdateRating rating={rating} /> : <p>{rating.score}</p>}
  </div>
</Layout>
