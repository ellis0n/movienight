---
import Layout from "../../layouts/Layout.astro";
import { actions } from "astro:actions";
import { Image } from "astro:assets";
import MovieRatings from "@components/Tables/MovieRatings";

const auth = Astro.locals.auth();

const getMovie = await Astro.callAction(actions.movies.getMovieWithRatings, {
  movieId: Astro.params.id as string,
  sort: "RATING_SCORE_DESC",
});

const { data: movieObj, error } = getMovie;

if (error) {
  return Astro.redirect("/404");
}

const { id, title, average, date, ratings } = movieObj[0] || {
  id: "",
  title: "Unknown Movie",
  average: 0,
  date: new Date(),
  ratings: [],
};

const getOMDB = await Astro.callAction(actions.omdb.getOmdbFilm, {
  title: title,
  apiKey: import.meta.env.PUBLIC_OMDB_API_KEY as string,
});

const { data: omdb, error: omdbError } = getOMDB;

if (omdbError) {
  console.error("Error fetching OMDB data:", omdbError);
}
---

<Layout title={title}>
  {
    movieObj && (
      <div class="container mx-auto p-4 text-white">
        <h1 class="text-4xl font-bold mb-4">{title}</h1>

        {omdb && (
          <div class="flex flex-col md:flex-row bg-gray-800 p-4 rounded-lg shadow-lg">
            <Image
              src={omdb.Poster}
              alt={omdb.Title}
              height={288}
              width={192}
              class="w-48 h-72 object-cover rounded-lg mb-4 md:mb-0 md:mr-4"
              transition:name={omdb.Poster}
            />
            <div class="flex-1">
              <p class="text-lg mb-2">
                <span class="font-bold">Year: </span> {omdb.Year}
              </p>
              <p class="text-lg mb-2">
                <span class="font-bold">Director: </span> {omdb.Director}
              </p>
              <p class="text-lg mb-2">
                <span class="font-bold">Plot: </span> {omdb.Plot}
              </p>
              <p class="text-lg mb-2">
                <span class="font-bold">Average Rating: </span> {average}
              </p>
              <p class="text-lg mb-2">
                <span class="font-bold">Date Watched: </span>{" "}
                {new Date(date).toLocaleDateString()}
              </p>
            </div>
          </div>
        )}

        <div class="mt-8">
          <h2 class="text-2xl font-semibold mb-4">Ratings:</h2>
          <MovieRatings client:load data={ratings} movieId={id} />
        </div>
      </div>
    )
  }
</Layout>
